[gd_scene load_steps=25 format=2]

[ext_resource path="res://Game/Blocks/ForceField/ForceField.gd" type="Script" id=1]
[ext_resource path="res://Game/Assets/Images/Items/items.png" type="Texture" id=2]
[ext_resource path="res://Game/Effects/ForceFieldDisappear.tscn" type="PackedScene" id=3]
[ext_resource path="res://Game/Assets/Images/Characters/mini-bat.png" type="Texture" id=4]
[ext_resource path="res://Game/Assets/Audio/ogg/effects/bats.ogg" type="AudioStream" id=5]
[ext_resource path="res://Game/Assets/Images/Environment/tilesmap.png" type="Texture" id=6]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
render_mode blend_mix;


//uniform vec2 SCALEV = vec2(1.0);
uniform float SCALEI = 1.0;
uniform vec2 DECAL = vec2(2.0);
uniform float OFFSET = 0.0;
uniform float blur_radius = 3.0;
uniform bool sided=false;
uniform bool horizontal=false;
uniform bool add_distord_color=true;
uniform float min_alpha=0.0;
uniform float max_alpha=1.0;
uniform float FLASH_SCALE=1.0;
uniform float min_color_dist=0.0;
uniform float max_color_dist=1.0;
uniform float FLASH_OFFSET=0;


float rand(vec2 coords){
	return fract(sin(dot(coords, vec2(12.9898,78.233)))*43758.5453123);
}


float noise(vec2 coords){
	vec2 i = floor(coords);
	vec2 f = fract(coords);
	
	float a = rand(i);
	float b = rand(i+vec2(1.0,0.0));
	float c = rand(i+vec2(0.0,1.0));
	float d = rand(i+vec2(1.0,1.0));
	
	vec2 cubic = f * f * (3.0-2.0*f);
	
	return mix(a,b, cubic.x) + (c-a) * cubic.y * (1.0 - cubic.x) + (d-b) * cubic.x * cubic.y;
}

vec4 pixel(vec4 orig){
	vec4 pixel=orig;
	if(pixel.rgb==vec3(1.0)){
		pixel=vec4(0.3,0.3,0.2,0.8);
//		pixel=vec4(1,0,0,1);
	}
	return pixel;
}

vec2 blur_coords(vec2 uv,vec2 distord, vec2 offset){
//	return uv+offset;
//	return clamp( (uv+vec2(0.003))/1.06 +distord+ offset,vec2(0,0),vec2(0.1,0.1));
	return clamp( ((uv+vec2(0.003))/1.006)+distord+ offset,vec2(0,0),vec2(0.1,0.1));
}

void fragment() {
	vec2 ps = TEXTURE_PIXEL_SIZE;
	
	vec2 noisecoord1 = UV *  SCALEI;
	vec2 noisecoord2 = UV *  SCALEI + OFFSET;
	
	vec2 motion1 = vec2(TIME * 0.2, TIME * -0.2);
	vec2 motion2 = vec2(TIME * 0.2, TIME * 0.2);
	
	vec2 distord1 = vec2(noise(noisecoord1+motion1),noise(noisecoord2+motion1))-DECAL;
	vec2 distord2 = vec2(noise(noisecoord1+motion2),noise(noisecoord2+motion2))-DECAL;
	
	vec2 distord_sum = (distord1+distord2)/60.0;
	
	vec4 colorig = pixel(texture(TEXTURE, (UV+vec2(0.003))/1.006))*2.0;

	vec4 blur=colorig;
	blur += pixel(texture(TEXTURE, blur_coords(UV,distord_sum, vec2(0.0, -blur_radius) * ps)));
	blur += pixel(texture(TEXTURE, blur_coords(UV,distord_sum, vec2(0.0, blur_radius) * ps)));
	blur += pixel(texture(TEXTURE, blur_coords(UV,distord_sum, vec2(-blur_radius, 0.0) * ps)));
	blur += pixel(texture(TEXTURE, blur_coords(UV,distord_sum, vec2(blur_radius, 0.0) * ps)));
	blur /= 5.0;
	
	vec4 col=blur;
	blur.a=1.0;
	
	if(col.rgb==vec3(1.0)){
		col.a=max_alpha;	
	}else{
		if(add_distord_color){
			float distl=clamp(length(distord_sum)*60.0,0.0,1.0);
			col.rgb=mix(vec3(clamp(0.5-distl,min_color_dist,max_color_dist)),col.rgb,1.7);
			col.a=clamp(distl*(1.0+sin(TIME+FLASH_OFFSET)*FLASH_SCALE),min_alpha,max_alpha);
		}
	}
	
	if(sided){
		if(horizontal){
			if(UV.y<0.01){
				col.a=clamp(UV.y*50.0,0.0,col.a);
			}
			if(UV.y>0.09){
				col.a=clamp((0.1-UV.y)*50.0,0.0,col.a);
			}
		}else{
			if(UV.x<0.01){
				col.a=clamp(UV.x*50.0,0.0,col.a);
			}
			if(UV.x>0.09){
				col.a=clamp((0.1-UV.x)*50.0,0.0,col.a);
			}
		}
	}
	
	COLOR = col;
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/SCALEI = 64.0
shader_param/DECAL = Vector2( 0.6, 0.5 )
shader_param/OFFSET = 10.0
shader_param/blur_radius = 2.0
shader_param/sided = true
shader_param/horizontal = false
shader_param/add_distord_color = true
shader_param/min_alpha = 0.0
shader_param/max_alpha = 0.5
shader_param/FLASH_SCALE = 0.9
shader_param/min_color_dist = 0.0
shader_param/max_color_dist = 0.5
shader_param/FLASH_OFFSET = 0.0

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 0, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 11, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 22, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 33, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 44, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 55, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 66, 0, 11, 11 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 4 )
region = Rect2( 77, 0, 11, 11 )

[sub_resource type="SpriteFrames" id=11]
animations = [ {
"frames": [ SubResource( 3 ), SubResource( 4 ), SubResource( 5 ), SubResource( 6 ), SubResource( 7 ), SubResource( 8 ), SubResource( 9 ), SubResource( 10 ) ],
"loop": true,
"name": "default",
"speed": 20.0
} ]

[sub_resource type="Animation" id=12]
length = 2.0
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("Arrows:scale")
tracks/0/interp = 2
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 1, 2 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 0.8 ), Vector2( 1, 1 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("Arrows:modulate")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.5, 1 ),
"transitions": PoolRealArray( 1, 1, 1 ),
"update": 0,
"values": [ Color( 1, 1, 1, 1 ), Color( 1, 1, 1, 1 ), Color( 0, 0, 0, 0 ) ]
}
tracks/2/type = "value"
tracks/2/path = NodePath("Arrows:visible")
tracks/2/interp = 1
tracks/2/loop_wrap = true
tracks/2/imported = false
tracks/2/enabled = true
tracks/2/keys = {
"times": PoolRealArray( 0, 1 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 1,
"values": [ true, false ]
}

[sub_resource type="Gradient" id=13]
offsets = PoolRealArray( 0, 0.319905, 0.665877, 0.99763 )
colors = PoolColorArray( 0, 0, 0, 0, 0, 0, 0, 1, 0.313726, 0.478431, 0.294118, 0.929412, 0, 0, 0, 0 )

[sub_resource type="GradientTexture" id=14]
gradient = SubResource( 13 )

[sub_resource type="Curve" id=15]
_data = [ Vector2( 0, 0.0090909 ), 0.0, 5.51383, 0, 0, Vector2( 1, 0 ), -3.11483, 0.0, 0, 0 ]

[sub_resource type="CurveTexture" id=16]
curve = SubResource( 15 )

[sub_resource type="ParticlesMaterial" id=17]
lifetime_randomness = 0.31
trail_divisor = 3
emission_shape = 2
emission_box_extents = Vector3( 4, 4, 1 )
flag_disable_z = true
direction = Vector3( 0, 1, 0 )
spread = 180.0
gravity = Vector3( 0, 0, 0 )
initial_velocity = 4.0
initial_velocity_random = 0.6
orbit_velocity = 0.0
orbit_velocity_random = 0.0
angle = 18.0
angle_random = 1.0
scale = 3.0
scale_curve = SubResource( 16 )
color_ramp = SubResource( 14 )

[sub_resource type="StreamTexture" id=18]
flags = 4
load_path = "res://.import/Explosion.png-e80f1b69e1dcc758041f0eea244d5f31.stex"

[node name="ForceField" type="Node2D"]
script = ExtResource( 1 )
effect = ExtResource( 3 )

[node name="Background" type="Sprite" parent="."]
texture = ExtResource( 2 )
vframes = 10
hframes = 10
frame = 24
region_rect = Rect2( 160, 96, 32, 32 )

[node name="BlockFace" type="Sprite" parent="."]
material = SubResource( 2 )
texture = ExtResource( 6 )
vframes = 10
hframes = 10
frame = 5

[node name="BatsPlaceHolder" type="Node2D" parent="."]

[node name="BatPrototype" type="AnimatedSprite" parent="."]
visible = false
frames = SubResource( 11 )
frame = 6
playing = true

[node name="Arrows" type="Sprite" parent="."]
scale = Vector2( 1, 0.940408 )
texture = ExtResource( 2 )
vframes = 10
hframes = 10
frame = 30

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
autoplay = "anim"
playback_speed = 0.75
anims/anim = SubResource( 12 )

[node name="BatsSound" type="AudioStreamPlayer" parent="."]
stream = ExtResource( 5 )
volume_db = -10.0
mix_target = 1
bus = "Effects"

[node name="CanvasLayer" type="CanvasLayer" parent="."]
layer = 27
follow_viewport_enable = true

[node name="BatsSmokingFog" type="Particles2D" parent="CanvasLayer"]
modulate = Color( 0.129412, 1, 0.521569, 0.0392157 )
amount = 40
lifetime = 5.0
preprocess = 40.48
randomness = 1.0
process_material = SubResource( 17 )
texture = SubResource( 18 )

[node name="UpdateBatsTimer" type="Timer" parent="."]
wait_time = 0.25
autostart = true
[connection signal="timeout" from="UpdateBatsTimer" to="." method="update_bats"]
